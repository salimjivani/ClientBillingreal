#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientBilling
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Avenue5")]
	public partial class ClientBillingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBusinessLogic(BusinessLogic instance);
    partial void UpdateBusinessLogic(BusinessLogic instance);
    partial void DeleteBusinessLogic(BusinessLogic instance);
    partial void InsertBusinessLogic1(BusinessLogic1 instance);
    partial void UpdateBusinessLogic1(BusinessLogic1 instance);
    partial void DeleteBusinessLogic1(BusinessLogic1 instance);
    partial void InsertBusinessLogicDetail(BusinessLogicDetail instance);
    partial void UpdateBusinessLogicDetail(BusinessLogicDetail instance);
    partial void DeleteBusinessLogicDetail(BusinessLogicDetail instance);
    partial void InsertBusinessLogicLabel(BusinessLogicLabel instance);
    partial void UpdateBusinessLogicLabel(BusinessLogicLabel instance);
    partial void DeleteBusinessLogicLabel(BusinessLogicLabel instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertCodeDetail(CodeDetail instance);
    partial void UpdateCodeDetail(CodeDetail instance);
    partial void DeleteCodeDetail(CodeDetail instance);
    partial void InsertCode(Code instance);
    partial void UpdateCode(Code instance);
    partial void DeleteCode(Code instance);
    partial void InsertEmpDetail(EmpDetail instance);
    partial void UpdateEmpDetail(EmpDetail instance);
    partial void DeleteEmpDetail(EmpDetail instance);
    partial void InsertLoad(Load instance);
    partial void UpdateLoad(Load instance);
    partial void DeleteLoad(Load instance);
    partial void InsertSummaryPayData(SummaryPayData instance);
    partial void UpdateSummaryPayData(SummaryPayData instance);
    partial void DeleteSummaryPayData(SummaryPayData instance);
    #endregion
		
		public ClientBillingDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Avenue5ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ClientBillingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientBillingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientBillingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientBillingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BusinessLogic> BusinessLogics
		{
			get
			{
				return this.GetTable<BusinessLogic>();
			}
		}
		
		public System.Data.Linq.Table<BusinessLogic1> BusinessLogic1s
		{
			get
			{
				return this.GetTable<BusinessLogic1>();
			}
		}
		
		public System.Data.Linq.Table<BusinessLogicDetail> BusinessLogicDetails
		{
			get
			{
				return this.GetTable<BusinessLogicDetail>();
			}
		}
		
		public System.Data.Linq.Table<BusinessLogicLabel> BusinessLogicLabels
		{
			get
			{
				return this.GetTable<BusinessLogicLabel>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<CodeDetail> CodeDetails
		{
			get
			{
				return this.GetTable<CodeDetail>();
			}
		}
		
		public System.Data.Linq.Table<Code> Codes
		{
			get
			{
				return this.GetTable<Code>();
			}
		}
		
		public System.Data.Linq.Table<EmpDetail> EmpDetails
		{
			get
			{
				return this.GetTable<EmpDetail>();
			}
		}
		
		public System.Data.Linq.Table<importCode> importCodes
		{
			get
			{
				return this.GetTable<importCode>();
			}
		}
		
		public System.Data.Linq.Table<importEmpData> importEmpDatas
		{
			get
			{
				return this.GetTable<importEmpData>();
			}
		}
		
		public System.Data.Linq.Table<importExpReimb> importExpReimbs
		{
			get
			{
				return this.GetTable<importExpReimb>();
			}
		}
		
		public System.Data.Linq.Table<importMiscFee> importMiscFees
		{
			get
			{
				return this.GetTable<importMiscFee>();
			}
		}
		
		public System.Data.Linq.Table<importPaydata> importPaydatas
		{
			get
			{
				return this.GetTable<importPaydata>();
			}
		}
		
		public System.Data.Linq.Table<Load> Loads
		{
			get
			{
				return this.GetTable<Load>();
			}
		}
		
		public System.Data.Linq.Table<SummaryPayData> SummaryPayDatas
		{
			get
			{
				return this.GetTable<SummaryPayData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessLogic")]
	public partial class BusinessLogic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ClientID;
		
		private string _Sheet;
		
		private EntitySet<BusinessLogicLabel> _BusinessLogicLabels;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnSheetChanging(string value);
    partial void OnSheetChanged();
    #endregion
		
		public BusinessLogic()
		{
			this._BusinessLogicLabels = new EntitySet<BusinessLogicLabel>(new Action<BusinessLogicLabel>(this.attach_BusinessLogicLabels), new Action<BusinessLogicLabel>(this.detach_BusinessLogicLabels));
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sheet", DbType="VarChar(MAX)")]
		public string Sheet
		{
			get
			{
				return this._Sheet;
			}
			set
			{
				if ((this._Sheet != value))
				{
					this.OnSheetChanging(value);
					this.SendPropertyChanging();
					this._Sheet = value;
					this.SendPropertyChanged("Sheet");
					this.OnSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessLogic_BusinessLogicLabel", Storage="_BusinessLogicLabels", ThisKey="ID", OtherKey="BusinessLogicID")]
		public EntitySet<BusinessLogicLabel> BusinessLogicLabels
		{
			get
			{
				return this._BusinessLogicLabels;
			}
			set
			{
				this._BusinessLogicLabels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_BusinessLogic", Storage="_Client", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.BusinessLogics.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.BusinessLogics.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}

        public string Number { get; internal set; }

        public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessLogicLabels(BusinessLogicLabel entity)
		{
			this.SendPropertyChanging();
			entity.BusinessLogic = this;
		}
		
		private void detach_BusinessLogicLabels(BusinessLogicLabel entity)
		{
			this.SendPropertyChanging();
			entity.BusinessLogic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessLogic")]
	public partial class BusinessLogic1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ClientID;
		
		private string _Sheet;
		
		private EntitySet<BusinessLogicLabel> _BusinessLogicLabels;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnSheetChanging(string value);
    partial void OnSheetChanged();
    #endregion
		
		public BusinessLogic1()
		{
			this._BusinessLogicLabels = new EntitySet<BusinessLogicLabel>(new Action<BusinessLogicLabel>(this.attach_BusinessLogicLabels), new Action<BusinessLogicLabel>(this.detach_BusinessLogicLabels));
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sheet", DbType="VarChar(MAX)")]
		public string Sheet
		{
			get
			{
				return this._Sheet;
			}
			set
			{
				if ((this._Sheet != value))
				{
					this.OnSheetChanging(value);
					this.SendPropertyChanging();
					this._Sheet = value;
					this.SendPropertyChanged("Sheet");
					this.OnSheetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessLogic1_BusinessLogicLabel", Storage="_BusinessLogicLabels", ThisKey="ID", OtherKey="BusinessLogicID")]
		public EntitySet<BusinessLogicLabel> BusinessLogicLabels
		{
			get
			{
				return this._BusinessLogicLabels;
			}
			set
			{
				this._BusinessLogicLabels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_BusinessLogic1", Storage="_Client", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.BusinessLogic1s.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.BusinessLogic1s.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessLogicLabels(BusinessLogicLabel entity)
		{
			this.SendPropertyChanging();
			entity.BusinessLogic1 = this;
		}
		
		private void detach_BusinessLogicLabels(BusinessLogicLabel entity)
		{
			this.SendPropertyChanging();
			entity.BusinessLogic1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessLogicDetails")]
	public partial class BusinessLogicDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Number;
		
		private System.Nullable<int> _BusinessLogicLabelID;
		
		private string _Value;
		
		private EntityRef<BusinessLogicLabel> _BusinessLogicLabel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    partial void OnBusinessLogicLabelIDChanging(System.Nullable<int> value);
    partial void OnBusinessLogicLabelIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public BusinessLogicDetail()
		{
			this._BusinessLogicLabel = default(EntityRef<BusinessLogicLabel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLogicLabelID", DbType="Int")]
		public System.Nullable<int> BusinessLogicLabelID
		{
			get
			{
				return this._BusinessLogicLabelID;
			}
			set
			{
				if ((this._BusinessLogicLabelID != value))
				{
					if (this._BusinessLogicLabel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessLogicLabelIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessLogicLabelID = value;
					this.SendPropertyChanged("BusinessLogicLabelID");
					this.OnBusinessLogicLabelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessLogicLabel_BusinessLogicDetail", Storage="_BusinessLogicLabel", ThisKey="BusinessLogicLabelID", OtherKey="ID", IsForeignKey=true)]
		public BusinessLogicLabel BusinessLogicLabel
		{
			get
			{
				return this._BusinessLogicLabel.Entity;
			}
			set
			{
				BusinessLogicLabel previousValue = this._BusinessLogicLabel.Entity;
				if (((previousValue != value) 
							|| (this._BusinessLogicLabel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessLogicLabel.Entity = null;
						previousValue.BusinessLogicDetails.Remove(this);
					}
					this._BusinessLogicLabel.Entity = value;
					if ((value != null))
					{
						value.BusinessLogicDetails.Add(this);
						this._BusinessLogicLabelID = value.ID;
					}
					else
					{
						this._BusinessLogicLabelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BusinessLogicLabel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessLogicLabels")]
	public partial class BusinessLogicLabel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ClientID;
		
		private System.Nullable<int> _BusinessLogicID;
		
		private string _Value;
		
		private EntitySet<BusinessLogicDetail> _BusinessLogicDetails;
		
		private EntitySet<SummaryPayData> _SummaryPayDatas;
		
		private EntityRef<BusinessLogic> _BusinessLogic;
		
		private EntityRef<BusinessLogic1> _BusinessLogic1;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnBusinessLogicIDChanging(System.Nullable<int> value);
    partial void OnBusinessLogicIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public BusinessLogicLabel()
		{
			this._BusinessLogicDetails = new EntitySet<BusinessLogicDetail>(new Action<BusinessLogicDetail>(this.attach_BusinessLogicDetails), new Action<BusinessLogicDetail>(this.detach_BusinessLogicDetails));
			this._SummaryPayDatas = new EntitySet<SummaryPayData>(new Action<SummaryPayData>(this.attach_SummaryPayDatas), new Action<SummaryPayData>(this.detach_SummaryPayDatas));
			this._BusinessLogic = default(EntityRef<BusinessLogic>);
			this._BusinessLogic1 = default(EntityRef<BusinessLogic1>);
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLogicID", DbType="Int")]
		public System.Nullable<int> BusinessLogicID
		{
			get
			{
				return this._BusinessLogicID;
			}
			set
			{
				if ((this._BusinessLogicID != value))
				{
					if ((this._BusinessLogic.HasLoadedOrAssignedValue || this._BusinessLogic1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessLogicIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessLogicID = value;
					this.SendPropertyChanged("BusinessLogicID");
					this.OnBusinessLogicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessLogicLabel_BusinessLogicDetail", Storage="_BusinessLogicDetails", ThisKey="ID", OtherKey="BusinessLogicLabelID")]
		public EntitySet<BusinessLogicDetail> BusinessLogicDetails
		{
			get
			{
				return this._BusinessLogicDetails;
			}
			set
			{
				this._BusinessLogicDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessLogicLabel_SummaryPayData", Storage="_SummaryPayDatas", ThisKey="ID", OtherKey="BusinessLogicLabelID")]
		public EntitySet<SummaryPayData> SummaryPayDatas
		{
			get
			{
				return this._SummaryPayDatas;
			}
			set
			{
				this._SummaryPayDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessLogic_BusinessLogicLabel", Storage="_BusinessLogic", ThisKey="BusinessLogicID", OtherKey="ID", IsForeignKey=true)]
		public BusinessLogic BusinessLogic
		{
			get
			{
				return this._BusinessLogic.Entity;
			}
			set
			{
				BusinessLogic previousValue = this._BusinessLogic.Entity;
				if (((previousValue != value) 
							|| (this._BusinessLogic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessLogic.Entity = null;
						previousValue.BusinessLogicLabels.Remove(this);
					}
					this._BusinessLogic.Entity = value;
					if ((value != null))
					{
						value.BusinessLogicLabels.Add(this);
						this._BusinessLogicID = value.ID;
					}
					else
					{
						this._BusinessLogicID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BusinessLogic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessLogic1_BusinessLogicLabel", Storage="_BusinessLogic1", ThisKey="BusinessLogicID", OtherKey="ID", IsForeignKey=true)]
		public BusinessLogic1 BusinessLogic1
		{
			get
			{
				return this._BusinessLogic1.Entity;
			}
			set
			{
				BusinessLogic1 previousValue = this._BusinessLogic1.Entity;
				if (((previousValue != value) 
							|| (this._BusinessLogic1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessLogic1.Entity = null;
						previousValue.BusinessLogicLabels.Remove(this);
					}
					this._BusinessLogic1.Entity = value;
					if ((value != null))
					{
						value.BusinessLogicLabels.Add(this);
						this._BusinessLogicID = value.ID;
					}
					else
					{
						this._BusinessLogicID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BusinessLogic1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_BusinessLogicLabel", Storage="_Client", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.BusinessLogicLabels.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.BusinessLogicLabels.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessLogicDetails(BusinessLogicDetail entity)
		{
			this.SendPropertyChanging();
			entity.BusinessLogicLabel = this;
		}
		
		private void detach_BusinessLogicDetails(BusinessLogicDetail entity)
		{
			this.SendPropertyChanging();
			entity.BusinessLogicLabel = null;
		}
		
		private void attach_SummaryPayDatas(SummaryPayData entity)
		{
			this.SendPropertyChanging();
			entity.BusinessLogicLabel = this;
		}
		
		private void detach_SummaryPayDatas(SummaryPayData entity)
		{
			this.SendPropertyChanging();
			entity.BusinessLogicLabel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Client1;
		
		private EntitySet<BusinessLogic> _BusinessLogics;
		
		private EntitySet<BusinessLogic1> _BusinessLogic1s;
		
		private EntitySet<BusinessLogicLabel> _BusinessLogicLabels;
		
		private EntitySet<CodeDetail> _CodeDetails;
		
		private EntitySet<Code> _Codes;
		
		private EntitySet<EmpDetail> _EmpDetails;
		
		private EntitySet<Load> _Loads;
		
		private EntitySet<SummaryPayData> _SummaryPayDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClient1Changing(string value);
    partial void OnClient1Changed();
    #endregion
		
		public Client()
		{
			this._BusinessLogics = new EntitySet<BusinessLogic>(new Action<BusinessLogic>(this.attach_BusinessLogics), new Action<BusinessLogic>(this.detach_BusinessLogics));
			this._BusinessLogic1s = new EntitySet<BusinessLogic1>(new Action<BusinessLogic1>(this.attach_BusinessLogic1s), new Action<BusinessLogic1>(this.detach_BusinessLogic1s));
			this._BusinessLogicLabels = new EntitySet<BusinessLogicLabel>(new Action<BusinessLogicLabel>(this.attach_BusinessLogicLabels), new Action<BusinessLogicLabel>(this.detach_BusinessLogicLabels));
			this._CodeDetails = new EntitySet<CodeDetail>(new Action<CodeDetail>(this.attach_CodeDetails), new Action<CodeDetail>(this.detach_CodeDetails));
			this._Codes = new EntitySet<Code>(new Action<Code>(this.attach_Codes), new Action<Code>(this.detach_Codes));
			this._EmpDetails = new EntitySet<EmpDetail>(new Action<EmpDetail>(this.attach_EmpDetails), new Action<EmpDetail>(this.detach_EmpDetails));
			this._Loads = new EntitySet<Load>(new Action<Load>(this.attach_Loads), new Action<Load>(this.detach_Loads));
			this._SummaryPayDatas = new EntitySet<SummaryPayData>(new Action<SummaryPayData>(this.attach_SummaryPayDatas), new Action<SummaryPayData>(this.detach_SummaryPayDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Client", Storage="_Client1", DbType="VarChar(MAX)")]
		public string Client1
		{
			get
			{
				return this._Client1;
			}
			set
			{
				if ((this._Client1 != value))
				{
					this.OnClient1Changing(value);
					this.SendPropertyChanging();
					this._Client1 = value;
					this.SendPropertyChanged("Client1");
					this.OnClient1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_BusinessLogic", Storage="_BusinessLogics", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<BusinessLogic> BusinessLogics
		{
			get
			{
				return this._BusinessLogics;
			}
			set
			{
				this._BusinessLogics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_BusinessLogic1", Storage="_BusinessLogic1s", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<BusinessLogic1> BusinessLogic1s
		{
			get
			{
				return this._BusinessLogic1s;
			}
			set
			{
				this._BusinessLogic1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_BusinessLogicLabel", Storage="_BusinessLogicLabels", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<BusinessLogicLabel> BusinessLogicLabels
		{
			get
			{
				return this._BusinessLogicLabels;
			}
			set
			{
				this._BusinessLogicLabels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_CodeDetail", Storage="_CodeDetails", ThisKey="ID", OtherKey="ClientiD")]
		public EntitySet<CodeDetail> CodeDetails
		{
			get
			{
				return this._CodeDetails;
			}
			set
			{
				this._CodeDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Code", Storage="_Codes", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Code> Codes
		{
			get
			{
				return this._Codes;
			}
			set
			{
				this._Codes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_EmpDetail", Storage="_EmpDetails", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<EmpDetail> EmpDetails
		{
			get
			{
				return this._EmpDetails;
			}
			set
			{
				this._EmpDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Load", Storage="_Loads", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Load> Loads
		{
			get
			{
				return this._Loads;
			}
			set
			{
				this._Loads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_SummaryPayData", Storage="_SummaryPayDatas", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<SummaryPayData> SummaryPayDatas
		{
			get
			{
				return this._SummaryPayDatas;
			}
			set
			{
				this._SummaryPayDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessLogics(BusinessLogic entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_BusinessLogics(BusinessLogic entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_BusinessLogic1s(BusinessLogic1 entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_BusinessLogic1s(BusinessLogic1 entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_BusinessLogicLabels(BusinessLogicLabel entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_BusinessLogicLabels(BusinessLogicLabel entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_CodeDetails(CodeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_CodeDetails(CodeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Codes(Code entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Codes(Code entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_EmpDetails(EmpDetail entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_EmpDetails(EmpDetail entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_SummaryPayDatas(SummaryPayData entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_SummaryPayDatas(SummaryPayData entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CodeDetails")]
	public partial class CodeDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CodesID;
		
		private string _Code;
		
		private string _Description;
		
		private string _Status;
		
		private string _Name;
		
		private string _Short_Description;
		
		private string _Check_Stub_Description;
		
		private string _Total_Comp_Category;
		
		private string _Pay_Class;
		
		private string _Job_Title;
		
		private string _EEO_Code;
		
		private string _Default_WC_Code;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State_or_Province;
		
		private string _Zip_Code;
		
		private string _Payroll_Contact_Name;
		
		private string _Payroll_Contact_Phone;
		
		private string _Payroll_Contact_Title;
		
		private string _Local_Phone_Num;
		
		private string _TaxID;
		
		private string _Tax_GeoCode;
		
		private string _State;
		
		private string _Payee;
		
		private string _Rate;
		
		private System.Nullable<int> _ClientiD;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Code> _Code1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodesIDChanging(System.Nullable<int> value);
    partial void OnCodesIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShort_DescriptionChanging(string value);
    partial void OnShort_DescriptionChanged();
    partial void OnCheck_Stub_DescriptionChanging(string value);
    partial void OnCheck_Stub_DescriptionChanged();
    partial void OnTotal_Comp_CategoryChanging(string value);
    partial void OnTotal_Comp_CategoryChanged();
    partial void OnPay_ClassChanging(string value);
    partial void OnPay_ClassChanged();
    partial void OnJob_TitleChanging(string value);
    partial void OnJob_TitleChanged();
    partial void OnEEO_CodeChanging(string value);
    partial void OnEEO_CodeChanged();
    partial void OnDefault_WC_CodeChanging(string value);
    partial void OnDefault_WC_CodeChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnState_or_ProvinceChanging(string value);
    partial void OnState_or_ProvinceChanged();
    partial void OnZip_CodeChanging(string value);
    partial void OnZip_CodeChanged();
    partial void OnPayroll_Contact_NameChanging(string value);
    partial void OnPayroll_Contact_NameChanged();
    partial void OnPayroll_Contact_PhoneChanging(string value);
    partial void OnPayroll_Contact_PhoneChanged();
    partial void OnPayroll_Contact_TitleChanging(string value);
    partial void OnPayroll_Contact_TitleChanged();
    partial void OnLocal_Phone_NumChanging(string value);
    partial void OnLocal_Phone_NumChanged();
    partial void OnTaxIDChanging(string value);
    partial void OnTaxIDChanged();
    partial void OnTax_GeoCodeChanging(string value);
    partial void OnTax_GeoCodeChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPayeeChanging(string value);
    partial void OnPayeeChanged();
    partial void OnRateChanging(string value);
    partial void OnRateChanged();
    partial void OnClientiDChanging(System.Nullable<int> value);
    partial void OnClientiDChanged();
    #endregion
		
		public CodeDetail()
		{
			this._Client = default(EntityRef<Client>);
			this._Code1 = default(EntityRef<Code>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodesID", DbType="Int")]
		public System.Nullable<int> CodesID
		{
			get
			{
				return this._CodesID;
			}
			set
			{
				if ((this._CodesID != value))
				{
					if (this._Code1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodesIDChanging(value);
					this.SendPropertyChanging();
					this._CodesID = value;
					this.SendPropertyChanged("CodesID");
					this.OnCodesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(MAX)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Short Description]", Storage="_Short_Description", DbType="VarChar(MAX)")]
		public string Short_Description
		{
			get
			{
				return this._Short_Description;
			}
			set
			{
				if ((this._Short_Description != value))
				{
					this.OnShort_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Short_Description = value;
					this.SendPropertyChanged("Short_Description");
					this.OnShort_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Check Stub Description]", Storage="_Check_Stub_Description", DbType="VarChar(MAX)")]
		public string Check_Stub_Description
		{
			get
			{
				return this._Check_Stub_Description;
			}
			set
			{
				if ((this._Check_Stub_Description != value))
				{
					this.OnCheck_Stub_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Check_Stub_Description = value;
					this.SendPropertyChanged("Check_Stub_Description");
					this.OnCheck_Stub_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total Comp Category]", Storage="_Total_Comp_Category", DbType="VarChar(MAX)")]
		public string Total_Comp_Category
		{
			get
			{
				return this._Total_Comp_Category;
			}
			set
			{
				if ((this._Total_Comp_Category != value))
				{
					this.OnTotal_Comp_CategoryChanging(value);
					this.SendPropertyChanging();
					this._Total_Comp_Category = value;
					this.SendPropertyChanged("Total_Comp_Category");
					this.OnTotal_Comp_CategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Pay Class]", Storage="_Pay_Class", DbType="VarChar(MAX)")]
		public string Pay_Class
		{
			get
			{
				return this._Pay_Class;
			}
			set
			{
				if ((this._Pay_Class != value))
				{
					this.OnPay_ClassChanging(value);
					this.SendPropertyChanging();
					this._Pay_Class = value;
					this.SendPropertyChanged("Pay_Class");
					this.OnPay_ClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Job Title]", Storage="_Job_Title", DbType="VarChar(MAX)")]
		public string Job_Title
		{
			get
			{
				return this._Job_Title;
			}
			set
			{
				if ((this._Job_Title != value))
				{
					this.OnJob_TitleChanging(value);
					this.SendPropertyChanging();
					this._Job_Title = value;
					this.SendPropertyChanged("Job_Title");
					this.OnJob_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[EEO Code]", Storage="_EEO_Code", DbType="VarChar(MAX)")]
		public string EEO_Code
		{
			get
			{
				return this._EEO_Code;
			}
			set
			{
				if ((this._EEO_Code != value))
				{
					this.OnEEO_CodeChanging(value);
					this.SendPropertyChanging();
					this._EEO_Code = value;
					this.SendPropertyChanged("EEO_Code");
					this.OnEEO_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Default WC Code]", Storage="_Default_WC_Code", DbType="VarChar(MAX)")]
		public string Default_WC_Code
		{
			get
			{
				return this._Default_WC_Code;
			}
			set
			{
				if ((this._Default_WC_Code != value))
				{
					this.OnDefault_WC_CodeChanging(value);
					this.SendPropertyChanging();
					this._Default_WC_Code = value;
					this.SendPropertyChanged("Default_WC_Code");
					this.OnDefault_WC_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State or Province]", Storage="_State_or_Province", DbType="VarChar(MAX)")]
		public string State_or_Province
		{
			get
			{
				return this._State_or_Province;
			}
			set
			{
				if ((this._State_or_Province != value))
				{
					this.OnState_or_ProvinceChanging(value);
					this.SendPropertyChanging();
					this._State_or_Province = value;
					this.SendPropertyChanged("State_or_Province");
					this.OnState_or_ProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Zip Code]", Storage="_Zip_Code", DbType="VarChar(MAX)")]
		public string Zip_Code
		{
			get
			{
				return this._Zip_Code;
			}
			set
			{
				if ((this._Zip_Code != value))
				{
					this.OnZip_CodeChanging(value);
					this.SendPropertyChanging();
					this._Zip_Code = value;
					this.SendPropertyChanged("Zip_Code");
					this.OnZip_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Payroll Contact Name]", Storage="_Payroll_Contact_Name", DbType="VarChar(MAX)")]
		public string Payroll_Contact_Name
		{
			get
			{
				return this._Payroll_Contact_Name;
			}
			set
			{
				if ((this._Payroll_Contact_Name != value))
				{
					this.OnPayroll_Contact_NameChanging(value);
					this.SendPropertyChanging();
					this._Payroll_Contact_Name = value;
					this.SendPropertyChanged("Payroll_Contact_Name");
					this.OnPayroll_Contact_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Payroll Contact Phone]", Storage="_Payroll_Contact_Phone", DbType="VarChar(MAX)")]
		public string Payroll_Contact_Phone
		{
			get
			{
				return this._Payroll_Contact_Phone;
			}
			set
			{
				if ((this._Payroll_Contact_Phone != value))
				{
					this.OnPayroll_Contact_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Payroll_Contact_Phone = value;
					this.SendPropertyChanged("Payroll_Contact_Phone");
					this.OnPayroll_Contact_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Payroll Contact Title]", Storage="_Payroll_Contact_Title", DbType="VarChar(MAX)")]
		public string Payroll_Contact_Title
		{
			get
			{
				return this._Payroll_Contact_Title;
			}
			set
			{
				if ((this._Payroll_Contact_Title != value))
				{
					this.OnPayroll_Contact_TitleChanging(value);
					this.SendPropertyChanging();
					this._Payroll_Contact_Title = value;
					this.SendPropertyChanged("Payroll_Contact_Title");
					this.OnPayroll_Contact_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Local Phone Num]", Storage="_Local_Phone_Num", DbType="VarChar(MAX)")]
		public string Local_Phone_Num
		{
			get
			{
				return this._Local_Phone_Num;
			}
			set
			{
				if ((this._Local_Phone_Num != value))
				{
					this.OnLocal_Phone_NumChanging(value);
					this.SendPropertyChanging();
					this._Local_Phone_Num = value;
					this.SendPropertyChanged("Local_Phone_Num");
					this.OnLocal_Phone_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxID", DbType="VarChar(MAX)")]
		public string TaxID
		{
			get
			{
				return this._TaxID;
			}
			set
			{
				if ((this._TaxID != value))
				{
					this.OnTaxIDChanging(value);
					this.SendPropertyChanging();
					this._TaxID = value;
					this.SendPropertyChanged("TaxID");
					this.OnTaxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Tax GeoCode]", Storage="_Tax_GeoCode", DbType="VarChar(MAX)")]
		public string Tax_GeoCode
		{
			get
			{
				return this._Tax_GeoCode;
			}
			set
			{
				if ((this._Tax_GeoCode != value))
				{
					this.OnTax_GeoCodeChanging(value);
					this.SendPropertyChanging();
					this._Tax_GeoCode = value;
					this.SendPropertyChanged("Tax_GeoCode");
					this.OnTax_GeoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(MAX)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payee", DbType="VarChar(MAX)")]
		public string Payee
		{
			get
			{
				return this._Payee;
			}
			set
			{
				if ((this._Payee != value))
				{
					this.OnPayeeChanging(value);
					this.SendPropertyChanging();
					this._Payee = value;
					this.SendPropertyChanged("Payee");
					this.OnPayeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="VarChar(MAX)")]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientiD", DbType="Int")]
		public System.Nullable<int> ClientiD
		{
			get
			{
				return this._ClientiD;
			}
			set
			{
				if ((this._ClientiD != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientiDChanging(value);
					this.SendPropertyChanging();
					this._ClientiD = value;
					this.SendPropertyChanged("ClientiD");
					this.OnClientiDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_CodeDetail", Storage="_Client", ThisKey="ClientiD", OtherKey="ID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.CodeDetails.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.CodeDetails.Add(this);
						this._ClientiD = value.ID;
					}
					else
					{
						this._ClientiD = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Code_CodeDetail", Storage="_Code1", ThisKey="CodesID", OtherKey="ID", IsForeignKey=true)]
		public Code Code1
		{
			get
			{
				return this._Code1.Entity;
			}
			set
			{
				Code previousValue = this._Code1.Entity;
				if (((previousValue != value) 
							|| (this._Code1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Code1.Entity = null;
						previousValue.CodeDetails.Remove(this);
					}
					this._Code1.Entity = value;
					if ((value != null))
					{
						value.CodeDetails.Add(this);
						this._CodesID = value.ID;
					}
					else
					{
						this._CodesID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Code1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Codes")]
	public partial class Code : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private System.Nullable<int> _ClientID;
		
		private EntitySet<CodeDetail> _CodeDetails;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    #endregion
		
		public Code()
		{
			this._CodeDetails = new EntitySet<CodeDetail>(new Action<CodeDetail>(this.attach_CodeDetails), new Action<CodeDetail>(this.detach_CodeDetails));
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Code_CodeDetail", Storage="_CodeDetails", ThisKey="ID", OtherKey="CodesID")]
		public EntitySet<CodeDetail> CodeDetails
		{
			get
			{
				return this._CodeDetails;
			}
			set
			{
				this._CodeDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Code", Storage="_Client", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Codes.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Codes.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CodeDetails(CodeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Code1 = this;
		}
		
		private void detach_CodeDetails(CodeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Code1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpDetails")]
	public partial class EmpDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ClientID;
		
		private string _ExponentHRID;
		
		private string _EmpNo;
		
		private string _Name;
		
		private string _EmployementStatus;
		
		private string _EmploymentType;
		
		private string _CompanyCode;
		
		private string _JobCode;
		
		private string _DepartmentCode;
		
		private string _DivisionCode;
		
		private string _LocationCode;
		
		private string _ProjectCostCenterCode;
		
		private string _ShiftCode;
		
		private string _Contractor;
		
		private string _ContractorType;
		
		private string _PayGroupCode;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnExponentHRIDChanging(string value);
    partial void OnExponentHRIDChanged();
    partial void OnEmpNoChanging(string value);
    partial void OnEmpNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmployementStatusChanging(string value);
    partial void OnEmployementStatusChanged();
    partial void OnEmploymentTypeChanging(string value);
    partial void OnEmploymentTypeChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnDivisionCodeChanging(string value);
    partial void OnDivisionCodeChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnProjectCostCenterCodeChanging(string value);
    partial void OnProjectCostCenterCodeChanged();
    partial void OnShiftCodeChanging(string value);
    partial void OnShiftCodeChanged();
    partial void OnContractorChanging(string value);
    partial void OnContractorChanged();
    partial void OnContractorTypeChanging(string value);
    partial void OnContractorTypeChanged();
    partial void OnPayGroupCodeChanging(string value);
    partial void OnPayGroupCodeChanged();
    #endregion
		
		public EmpDetail()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExponentHRID", DbType="VarChar(255)")]
		public string ExponentHRID
		{
			get
			{
				return this._ExponentHRID;
			}
			set
			{
				if ((this._ExponentHRID != value))
				{
					this.OnExponentHRIDChanging(value);
					this.SendPropertyChanging();
					this._ExponentHRID = value;
					this.SendPropertyChanged("ExponentHRID");
					this.OnExponentHRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpNo", DbType="VarChar(255)")]
		public string EmpNo
		{
			get
			{
				return this._EmpNo;
			}
			set
			{
				if ((this._EmpNo != value))
				{
					this.OnEmpNoChanging(value);
					this.SendPropertyChanging();
					this._EmpNo = value;
					this.SendPropertyChanged("EmpNo");
					this.OnEmpNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployementStatus", DbType="VarChar(255)")]
		public string EmployementStatus
		{
			get
			{
				return this._EmployementStatus;
			}
			set
			{
				if ((this._EmployementStatus != value))
				{
					this.OnEmployementStatusChanging(value);
					this.SendPropertyChanging();
					this._EmployementStatus = value;
					this.SendPropertyChanged("EmployementStatus");
					this.OnEmployementStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentType", DbType="VarChar(255)")]
		public string EmploymentType
		{
			get
			{
				return this._EmploymentType;
			}
			set
			{
				if ((this._EmploymentType != value))
				{
					this.OnEmploymentTypeChanging(value);
					this.SendPropertyChanging();
					this._EmploymentType = value;
					this.SendPropertyChanged("EmploymentType");
					this.OnEmploymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(255)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="VarChar(255)")]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="VarChar(255)")]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="VarChar(255)")]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
			set
			{
				if ((this._DivisionCode != value))
				{
					this.OnDivisionCodeChanging(value);
					this.SendPropertyChanging();
					this._DivisionCode = value;
					this.SendPropertyChanged("DivisionCode");
					this.OnDivisionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(255)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCostCenterCode", DbType="VarChar(255)")]
		public string ProjectCostCenterCode
		{
			get
			{
				return this._ProjectCostCenterCode;
			}
			set
			{
				if ((this._ProjectCostCenterCode != value))
				{
					this.OnProjectCostCenterCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCostCenterCode = value;
					this.SendPropertyChanged("ProjectCostCenterCode");
					this.OnProjectCostCenterCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCode", DbType="VarChar(255)")]
		public string ShiftCode
		{
			get
			{
				return this._ShiftCode;
			}
			set
			{
				if ((this._ShiftCode != value))
				{
					this.OnShiftCodeChanging(value);
					this.SendPropertyChanging();
					this._ShiftCode = value;
					this.SendPropertyChanged("ShiftCode");
					this.OnShiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contractor", DbType="VarChar(255)")]
		public string Contractor
		{
			get
			{
				return this._Contractor;
			}
			set
			{
				if ((this._Contractor != value))
				{
					this.OnContractorChanging(value);
					this.SendPropertyChanging();
					this._Contractor = value;
					this.SendPropertyChanged("Contractor");
					this.OnContractorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorType", DbType="VarChar(255)")]
		public string ContractorType
		{
			get
			{
				return this._ContractorType;
			}
			set
			{
				if ((this._ContractorType != value))
				{
					this.OnContractorTypeChanging(value);
					this.SendPropertyChanging();
					this._ContractorType = value;
					this.SendPropertyChanged("ContractorType");
					this.OnContractorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayGroupCode", DbType="VarChar(255)")]
		public string PayGroupCode
		{
			get
			{
				return this._PayGroupCode;
			}
			set
			{
				if ((this._PayGroupCode != value))
				{
					this.OnPayGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._PayGroupCode = value;
					this.SendPropertyChanged("PayGroupCode");
					this.OnPayGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_EmpDetail", Storage="_Client", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.EmpDetails.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.EmpDetails.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.importCodes")]
	public partial class importCode
	{
		
		private string _Type;
		
		private string _Code;
		
		private string _Field;
		
		private string _Value;
		
		public importCode()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field", DbType="VarChar(50)")]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this._Field = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(50)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.importEmpData")]
	public partial class importEmpData
	{
		
		private string _ExponentHRID;
		
		private string _EmpNo;
		
		private string _Name;
		
		private string _EmploymentStatus;
		
		private string _EmploymentType;
		
		private string _CompanyCode;
		
		private string _JobCode;
		
		private string _DepartmentCode;
		
		private string _DivisionCode;
		
		private string _LocationCode;
		
		private string _ProjectCostCenterCode;
		
		private string _ShiftCode;
		
		private string _Contractor;
		
		private string _ContractorType;
		
		private string _PayGroupCode;
		
		public importEmpData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExponentHRID", DbType="VarChar(50)")]
		public string ExponentHRID
		{
			get
			{
				return this._ExponentHRID;
			}
			set
			{
				if ((this._ExponentHRID != value))
				{
					this._ExponentHRID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpNo", DbType="VarChar(50)")]
		public string EmpNo
		{
			get
			{
				return this._EmpNo;
			}
			set
			{
				if ((this._EmpNo != value))
				{
					this._EmpNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentStatus", DbType="VarChar(50)")]
		public string EmploymentStatus
		{
			get
			{
				return this._EmploymentStatus;
			}
			set
			{
				if ((this._EmploymentStatus != value))
				{
					this._EmploymentStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentType", DbType="VarChar(50)")]
		public string EmploymentType
		{
			get
			{
				return this._EmploymentType;
			}
			set
			{
				if ((this._EmploymentType != value))
				{
					this._EmploymentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this._CompanyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="VarChar(50)")]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this._JobCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="VarChar(50)")]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="VarChar(50)")]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
			set
			{
				if ((this._DivisionCode != value))
				{
					this._DivisionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(50)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCostCenterCode", DbType="VarChar(50)")]
		public string ProjectCostCenterCode
		{
			get
			{
				return this._ProjectCostCenterCode;
			}
			set
			{
				if ((this._ProjectCostCenterCode != value))
				{
					this._ProjectCostCenterCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCode", DbType="VarChar(50)")]
		public string ShiftCode
		{
			get
			{
				return this._ShiftCode;
			}
			set
			{
				if ((this._ShiftCode != value))
				{
					this._ShiftCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contractor", DbType="VarChar(50)")]
		public string Contractor
		{
			get
			{
				return this._Contractor;
			}
			set
			{
				if ((this._Contractor != value))
				{
					this._Contractor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorType", DbType="VarChar(50)")]
		public string ContractorType
		{
			get
			{
				return this._ContractorType;
			}
			set
			{
				if ((this._ContractorType != value))
				{
					this._ContractorType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayGroupCode", DbType="VarChar(50)")]
		public string PayGroupCode
		{
			get
			{
				return this._PayGroupCode;
			}
			set
			{
				if ((this._PayGroupCode != value))
				{
					this._PayGroupCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.importExpReimb")]
	public partial class importExpReimb
	{
		
		private string _CompanyCode;
		
		private string _PayGroupCode;
		
		private string _ExponentHRID;
		
		private string _JobCode;
		
		private string _DepartmentCode;
		
		private string _DivisionCode;
		
		private string _LocationCode;
		
		private string _ProjectCostCenterCode;
		
		private string _ShiftCode;
		
		private string _Batch;
		
		private string _Voucher;
		
		private string _CheckNum;
		
		private string _CheckData;
		
		private string _PayCodeType;
		
		private string _PayCode;
		
		private string _Units;
		
		private string _Rate;
		
		private string _Amount;
		
		private string _Purpose;
		
		private string _Category;
		
		private string _Type;
		
		private string _Description;
		
		public importExpReimb()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this._CompanyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayGroupCode", DbType="VarChar(50)")]
		public string PayGroupCode
		{
			get
			{
				return this._PayGroupCode;
			}
			set
			{
				if ((this._PayGroupCode != value))
				{
					this._PayGroupCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExponentHRID", DbType="VarChar(50)")]
		public string ExponentHRID
		{
			get
			{
				return this._ExponentHRID;
			}
			set
			{
				if ((this._ExponentHRID != value))
				{
					this._ExponentHRID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="VarChar(50)")]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this._JobCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="VarChar(50)")]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="VarChar(50)")]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
			set
			{
				if ((this._DivisionCode != value))
				{
					this._DivisionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(50)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCostCenterCode", DbType="VarChar(50)")]
		public string ProjectCostCenterCode
		{
			get
			{
				return this._ProjectCostCenterCode;
			}
			set
			{
				if ((this._ProjectCostCenterCode != value))
				{
					this._ProjectCostCenterCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCode", DbType="VarChar(50)")]
		public string ShiftCode
		{
			get
			{
				return this._ShiftCode;
			}
			set
			{
				if ((this._ShiftCode != value))
				{
					this._ShiftCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="VarChar(50)")]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this._Batch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voucher", DbType="VarChar(50)")]
		public string Voucher
		{
			get
			{
				return this._Voucher;
			}
			set
			{
				if ((this._Voucher != value))
				{
					this._Voucher = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="VarChar(50)")]
		public string CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this._CheckNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckData", DbType="VarChar(50)")]
		public string CheckData
		{
			get
			{
				return this._CheckData;
			}
			set
			{
				if ((this._CheckData != value))
				{
					this._CheckData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayCodeType", DbType="VarChar(50)")]
		public string PayCodeType
		{
			get
			{
				return this._PayCodeType;
			}
			set
			{
				if ((this._PayCodeType != value))
				{
					this._PayCodeType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayCode", DbType="VarChar(50)")]
		public string PayCode
		{
			get
			{
				return this._PayCode;
			}
			set
			{
				if ((this._PayCode != value))
				{
					this._PayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Units", DbType="VarChar(50)")]
		public string Units
		{
			get
			{
				return this._Units;
			}
			set
			{
				if ((this._Units != value))
				{
					this._Units = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="VarChar(50)")]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(50)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="VarChar(MAX)")]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this._Purpose = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(MAX)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(MAX)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.importMiscFees")]
	public partial class importMiscFee
	{
		
		private string _CompanyCode;
		
		private string _LocationCode;
		
		private string _Batch;
		
		private string _Date;
		
		private string _Type;
		
		private string _Amount;
		
		private string _Comment;
		
		public importMiscFee()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this._CompanyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(50)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="VarChar(50)")]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this._Batch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(50)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.importPaydata")]
	public partial class importPaydata
	{
		
		private string _CompanyCode;
		
		private string _PayGroupCode;
		
		private string _ExponentHRID;
		
		private string _JobCode;
		
		private string _DepartmentCode;
		
		private string _DivisionCode;
		
		private string _LocationCode;
		
		private string _ProjectCostCenterCode;
		
		private string _ShiftCode;
		
		private string _Batch;
		
		private string _Voucher;
		
		private string _CheckNum;
		
		private string _CheckDate;
		
		private string _PayCodeType;
		
		private string _PayCode;
		
		private string _Units;
		
		private string _Rate;
		
		private string _Amount;
		
		public importPaydata()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(50)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this._CompanyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayGroupCode", DbType="VarChar(50)")]
		public string PayGroupCode
		{
			get
			{
				return this._PayGroupCode;
			}
			set
			{
				if ((this._PayGroupCode != value))
				{
					this._PayGroupCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExponentHRID", DbType="VarChar(50)")]
		public string ExponentHRID
		{
			get
			{
				return this._ExponentHRID;
			}
			set
			{
				if ((this._ExponentHRID != value))
				{
					this._ExponentHRID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="VarChar(50)")]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this._JobCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="VarChar(50)")]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="VarChar(50)")]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
			set
			{
				if ((this._DivisionCode != value))
				{
					this._DivisionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(50)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCostCenterCode", DbType="VarChar(50)")]
		public string ProjectCostCenterCode
		{
			get
			{
				return this._ProjectCostCenterCode;
			}
			set
			{
				if ((this._ProjectCostCenterCode != value))
				{
					this._ProjectCostCenterCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCode", DbType="VarChar(50)")]
		public string ShiftCode
		{
			get
			{
				return this._ShiftCode;
			}
			set
			{
				if ((this._ShiftCode != value))
				{
					this._ShiftCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="VarChar(50)")]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this._Batch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voucher", DbType="VarChar(50)")]
		public string Voucher
		{
			get
			{
				return this._Voucher;
			}
			set
			{
				if ((this._Voucher != value))
				{
					this._Voucher = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="VarChar(50)")]
		public string CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this._CheckNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="VarChar(50)")]
		public string CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this._CheckDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayCodeType", DbType="VarChar(50)")]
		public string PayCodeType
		{
			get
			{
				return this._PayCodeType;
			}
			set
			{
				if ((this._PayCodeType != value))
				{
					this._PayCodeType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayCode", DbType="VarChar(50)")]
		public string PayCode
		{
			get
			{
				return this._PayCode;
			}
			set
			{
				if ((this._PayCode != value))
				{
					this._PayCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Units", DbType="VarChar(50)")]
		public string Units
		{
			get
			{
				return this._Units;
			}
			set
			{
				if ((this._Units != value))
				{
					this._Units = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="VarChar(50)")]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this._Rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(50)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Load]")]
	public partial class Load : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ClientID;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
		private EntitySet<SummaryPayData> _SummaryPayDatas;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    #endregion
		
		public Load()
		{
			this._SummaryPayDatas = new EntitySet<SummaryPayData>(new Action<SummaryPayData>(this.attach_SummaryPayDatas), new Action<SummaryPayData>(this.detach_SummaryPayDatas));
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Load_SummaryPayData", Storage="_SummaryPayDatas", ThisKey="ID", OtherKey="LoadID")]
		public EntitySet<SummaryPayData> SummaryPayDatas
		{
			get
			{
				return this._SummaryPayDatas;
			}
			set
			{
				this._SummaryPayDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Load", Storage="_Client", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Loads.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Loads.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SummaryPayDatas(SummaryPayData entity)
		{
			this.SendPropertyChanging();
			entity.Load = this;
		}
		
		private void detach_SummaryPayDatas(SummaryPayData entity)
		{
			this.SendPropertyChanging();
			entity.Load = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SummaryPayData")]
	public partial class SummaryPayData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ClientID;
		
		private System.Nullable<int> _LoadID;
		
		private string _CompanyCode;
		
		private string _PayGroupCode;
		
		private string _ExponentHRID;
		
		private string _JobCode;
		
		private string _DepartmentCode;
		
		private string _DivisionCode;
		
		private string _LocationCode;
		
		private string _ProjectCostCenterCode;
		
		private string _ShiftCode;
		
		private string _Batch;
		
		private string _Voucher;
		
		private string _CheckNum;
		
		private string _CheckDate;
		
		private string _PayCodeType;
		
		private string _Units;
		
		private string _Rate;
		
		private string _Amount;
		
		private string _SummaryClass;
		
		private string _SummaryCode;
		
		private string _SummaryDescription;
		
		private System.Nullable<int> _BusinessLogicLabelID;
		
		private string _SummaryOrder;
		
		private string _Purpose;
		
		private string _Category;
		
		private string _Type;
		
		private string _Description;
		
		private EntityRef<BusinessLogicLabel> _BusinessLogicLabel;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Load> _Load;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnLoadIDChanging(System.Nullable<int> value);
    partial void OnLoadIDChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnPayGroupCodeChanging(string value);
    partial void OnPayGroupCodeChanged();
    partial void OnExponentHRIDChanging(string value);
    partial void OnExponentHRIDChanged();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnDivisionCodeChanging(string value);
    partial void OnDivisionCodeChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnProjectCostCenterCodeChanging(string value);
    partial void OnProjectCostCenterCodeChanged();
    partial void OnShiftCodeChanging(string value);
    partial void OnShiftCodeChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    partial void OnVoucherChanging(string value);
    partial void OnVoucherChanged();
    partial void OnCheckNumChanging(string value);
    partial void OnCheckNumChanged();
    partial void OnCheckDateChanging(string value);
    partial void OnCheckDateChanged();
    partial void OnPayCodeTypeChanging(string value);
    partial void OnPayCodeTypeChanged();
    partial void OnUnitsChanging(string value);
    partial void OnUnitsChanged();
    partial void OnRateChanging(string value);
    partial void OnRateChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnSummaryClassChanging(string value);
    partial void OnSummaryClassChanged();
    partial void OnSummaryCodeChanging(string value);
    partial void OnSummaryCodeChanged();
    partial void OnSummaryDescriptionChanging(string value);
    partial void OnSummaryDescriptionChanged();
    partial void OnBusinessLogicLabelIDChanging(System.Nullable<int> value);
    partial void OnBusinessLogicLabelIDChanged();
    partial void OnSummaryOrderChanging(string value);
    partial void OnSummaryOrderChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SummaryPayData()
		{
			this._BusinessLogicLabel = default(EntityRef<BusinessLogicLabel>);
			this._Client = default(EntityRef<Client>);
			this._Load = default(EntityRef<Load>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadID", DbType="Int")]
		public System.Nullable<int> LoadID
		{
			get
			{
				return this._LoadID;
			}
			set
			{
				if ((this._LoadID != value))
				{
					if (this._Load.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoadIDChanging(value);
					this.SendPropertyChanging();
					this._LoadID = value;
					this.SendPropertyChanged("LoadID");
					this.OnLoadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="VarChar(255)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayGroupCode", DbType="VarChar(255)")]
		public string PayGroupCode
		{
			get
			{
				return this._PayGroupCode;
			}
			set
			{
				if ((this._PayGroupCode != value))
				{
					this.OnPayGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._PayGroupCode = value;
					this.SendPropertyChanged("PayGroupCode");
					this.OnPayGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExponentHRID", DbType="VarChar(255)")]
		public string ExponentHRID
		{
			get
			{
				return this._ExponentHRID;
			}
			set
			{
				if ((this._ExponentHRID != value))
				{
					this.OnExponentHRIDChanging(value);
					this.SendPropertyChanging();
					this._ExponentHRID = value;
					this.SendPropertyChanged("ExponentHRID");
					this.OnExponentHRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="VarChar(255)")]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="VarChar(255)")]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="VarChar(255)")]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
			set
			{
				if ((this._DivisionCode != value))
				{
					this.OnDivisionCodeChanging(value);
					this.SendPropertyChanging();
					this._DivisionCode = value;
					this.SendPropertyChanged("DivisionCode");
					this.OnDivisionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(255)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCostCenterCode", DbType="VarChar(255)")]
		public string ProjectCostCenterCode
		{
			get
			{
				return this._ProjectCostCenterCode;
			}
			set
			{
				if ((this._ProjectCostCenterCode != value))
				{
					this.OnProjectCostCenterCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCostCenterCode = value;
					this.SendPropertyChanged("ProjectCostCenterCode");
					this.OnProjectCostCenterCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftCode", DbType="VarChar(255)")]
		public string ShiftCode
		{
			get
			{
				return this._ShiftCode;
			}
			set
			{
				if ((this._ShiftCode != value))
				{
					this.OnShiftCodeChanging(value);
					this.SendPropertyChanging();
					this._ShiftCode = value;
					this.SendPropertyChanged("ShiftCode");
					this.OnShiftCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="VarChar(255)")]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voucher", DbType="VarChar(255)")]
		public string Voucher
		{
			get
			{
				return this._Voucher;
			}
			set
			{
				if ((this._Voucher != value))
				{
					this.OnVoucherChanging(value);
					this.SendPropertyChanging();
					this._Voucher = value;
					this.SendPropertyChanged("Voucher");
					this.OnVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="VarChar(255)")]
		public string CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this.OnCheckNumChanging(value);
					this.SendPropertyChanging();
					this._CheckNum = value;
					this.SendPropertyChanged("CheckNum");
					this.OnCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="VarChar(255)")]
		public string CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayCodeType", DbType="VarChar(255)")]
		public string PayCodeType
		{
			get
			{
				return this._PayCodeType;
			}
			set
			{
				if ((this._PayCodeType != value))
				{
					this.OnPayCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._PayCodeType = value;
					this.SendPropertyChanged("PayCodeType");
					this.OnPayCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Units", DbType="VarChar(255)")]
		public string Units
		{
			get
			{
				return this._Units;
			}
			set
			{
				if ((this._Units != value))
				{
					this.OnUnitsChanging(value);
					this.SendPropertyChanging();
					this._Units = value;
					this.SendPropertyChanged("Units");
					this.OnUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="VarChar(255)")]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(255)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryClass", DbType="VarChar(255)")]
		public string SummaryClass
		{
			get
			{
				return this._SummaryClass;
			}
			set
			{
				if ((this._SummaryClass != value))
				{
					this.OnSummaryClassChanging(value);
					this.SendPropertyChanging();
					this._SummaryClass = value;
					this.SendPropertyChanged("SummaryClass");
					this.OnSummaryClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryCode", DbType="VarChar(255)")]
		public string SummaryCode
		{
			get
			{
				return this._SummaryCode;
			}
			set
			{
				if ((this._SummaryCode != value))
				{
					this.OnSummaryCodeChanging(value);
					this.SendPropertyChanging();
					this._SummaryCode = value;
					this.SendPropertyChanged("SummaryCode");
					this.OnSummaryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryDescription", DbType="VarChar(255)")]
		public string SummaryDescription
		{
			get
			{
				return this._SummaryDescription;
			}
			set
			{
				if ((this._SummaryDescription != value))
				{
					this.OnSummaryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SummaryDescription = value;
					this.SendPropertyChanged("SummaryDescription");
					this.OnSummaryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLogicLabelID", DbType="Int")]
		public System.Nullable<int> BusinessLogicLabelID
		{
			get
			{
				return this._BusinessLogicLabelID;
			}
			set
			{
				if ((this._BusinessLogicLabelID != value))
				{
					if (this._BusinessLogicLabel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessLogicLabelIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessLogicLabelID = value;
					this.SendPropertyChanged("BusinessLogicLabelID");
					this.OnBusinessLogicLabelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryOrder", DbType="VarChar(255)")]
		public string SummaryOrder
		{
			get
			{
				return this._SummaryOrder;
			}
			set
			{
				if ((this._SummaryOrder != value))
				{
					this.OnSummaryOrderChanging(value);
					this.SendPropertyChanging();
					this._SummaryOrder = value;
					this.SendPropertyChanged("SummaryOrder");
					this.OnSummaryOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="VarChar(MAX)")]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(MAX)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(MAX)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessLogicLabel_SummaryPayData", Storage="_BusinessLogicLabel", ThisKey="BusinessLogicLabelID", OtherKey="ID", IsForeignKey=true)]
		public BusinessLogicLabel BusinessLogicLabel
		{
			get
			{
				return this._BusinessLogicLabel.Entity;
			}
			set
			{
				BusinessLogicLabel previousValue = this._BusinessLogicLabel.Entity;
				if (((previousValue != value) 
							|| (this._BusinessLogicLabel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessLogicLabel.Entity = null;
						previousValue.SummaryPayDatas.Remove(this);
					}
					this._BusinessLogicLabel.Entity = value;
					if ((value != null))
					{
						value.SummaryPayDatas.Add(this);
						this._BusinessLogicLabelID = value.ID;
					}
					else
					{
						this._BusinessLogicLabelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BusinessLogicLabel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_SummaryPayData", Storage="_Client", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.SummaryPayDatas.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.SummaryPayDatas.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Load_SummaryPayData", Storage="_Load", ThisKey="LoadID", OtherKey="ID", IsForeignKey=true)]
		public Load Load
		{
			get
			{
				return this._Load.Entity;
			}
			set
			{
				Load previousValue = this._Load.Entity;
				if (((previousValue != value) 
							|| (this._Load.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Load.Entity = null;
						previousValue.SummaryPayDatas.Remove(this);
					}
					this._Load.Entity = value;
					if ((value != null))
					{
						value.SummaryPayDatas.Add(this);
						this._LoadID = value.ID;
					}
					else
					{
						this._LoadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Load");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
